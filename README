# Docker installation 

wget https://raw.githubusercontent.com/Jaibw/docker-v1/master/install-docker-ubuntu-20.04.sh 
sh install-docker-ubuntu-20.04.sh
# refresh your chrome 
docker --version 

docker run hello-world 
docker images

docker version
systemctl status docker    # press q to exit 
which docker               

docker images
docker pull nginx
docker images
docker pull redis
docker pull ubuntu
docker pull centos
docker images
docker pull nginx:1.9.5
docker images
# explore more images on hub.docker.com


mkdir ~/hello-python
cd ~/hello-python
wget https://raw.githubusercontent.com/Jaibw/docker-v1/master/hello-python/Dockerfile
wget https://raw.githubusercontent.com/Jaibw/docker-v1/master/hello-python/main.py
ls -l
docker build -t hello-python:v1 .
docker images 
docker run hello-python:v1 


# open second terminal using duplicate tab in chrome 
# 1st tab
docker run nginx 
# 2nd tab 
ps aux | grep nginx 
# 1st tab 
Ctrl + C to terminate your container 
# 2nd tab 
ps aux | grep nginx 


docker run ubuntu ls /
docker run ubuntu ps aux 
docker run ubuntu uname -a
docker run centos uname -a
docker run -it ubuntu /bin/bash
# vim --version 
# apt update 
# apt install vim -y 
# vim --version 
# exit 

sudo ls /var/lib/docker
sudo ls /var/lib/docker/image
sudo cat /var/lib/docker/image/overlay2/repositories.json
docker images
sudo ls /var/lib/docker/image/overlay2/layerdb/sha256


docker image inspect hello-python:v1
docker run jpetazzo/clock   # ctrl + c to exit 
docker run nginx            # ctrl + c to exit   
docker run -d jpetazzo/clock
docker run -d nginx 
docker ps 
docker logs <container-id>
docker ps 
docker ps -l 
docker ps -a
docker ps -q
docker ps -qa


docker run --name myapp -d nginx 
docker ps 
docker stop myapp 
docker ps -a
docker start myapp
docker ps 
docker kill myapp
docker ps -a
docker restart myapp
docker ps 
docker attach myapp    # ctrl + c to exit 
docker ps -a
docker start myapp 
docker ps 
docker logs myapp
docker exec myapp ls -l /proc
docker exec -it  myapp /bin/bash
# apt update && apt install vim -y 
# exit 
docker ps 
docker exec myapp vim --version


docker inspect myapp | less
docker inspect myapp | grep -i ipaddress
curl 172.#.#.#

docker ps
docker rm myapp
docker stop myapp
docker ps  -a
docker rm myapp
docker ps  -a | grep hello-world
docker rm <container-id> <container-id>
docker ps  -a | grep hello-world
docker system df
docker system info
docker system events    # ctrl + c to exit 
docker system prune
docker ps -a


docker run -it ubuntu /bin/bash
# hostname 
# exit 
docker run --hostname=front-end-app  -it ubuntu /bin/bash
# hostname 
# exit 
docker ps 
docker run --name=myapp -d nginx 
docker ps 
docker top myapp
docker stats
docker run -m 500M --memory-reservation 200M --name=myapp02 -d nginx 
docker run --cpus 0.02 --name=myapp03 -d nginx 
docker ps 
docker stats

docker volume 
docker volume create mysql-db
docker volume ls 
docker volume inspect mysql-db 
sudo ls /var/lib/docker/volumes/mysql-db/_data
docker run --name mysql -e MYSQL_ROOT_PASSWORD=password -v  mysql-db:/var/lib/mysql -d mysql 
sudo ls /var/lib/docker/volumes/mysql-db/_data
docker exec -it mysql /bin/bash
# mysql -u root -p
# Enter password: password
# mysql > create database demo;
# mysql > show databases;
# mysql > exit 
# exit 
docker stop mysql 
docker rm mysql 
sudo ls /var/lib/docker/volumes/mysql-db/_data
docker run --name mysql1 -e MYSQL_ROOT_PASSWORD=password -v  mysql-db:/var/lib/mysql -d mysql
docker exec -it mysql1 /bin/bash
# mysql -u root -p
# Enter password: password
# mysql > show databases;
# mysql > exit 
# exit 

cd ~
git clone https://github.com/Jaibw/FrozenYogurtShop.git
ls /home/ubuntu/FrozenYogurtShop
docker run --name website001 -v /home/ubuntu/FrozenYogurtShop:/usr/share/nginx/html -d nginx
docker ps 
docker inspect website001 | grep -i ipaddress
curl 172.#.#.#


docker run --name website001 -p 8081:80 -v /home/ubuntu/FrozenYogurtShop:/usr/share/nginx/html -d nginx
Open Chrome http://PublicIP:8081 


cd ~/hello-python
docker login 
docker build -t DOCKER-USERNAME/hello-python .     ## eg. docker build -t jaibw/hello-python .
docker push DOCKER-USERNAME/hello-python           ## eg. docker push jaibw/hello-python 
Open DockerHub and search for DOCKER-USERNAME/hello-python  

docker search DOCKER-USERNAME
docker search rabbitmq
docker rmi DOCKER-USERNAME/hello-python

docker ps
docker stop `docker ps -q`
docker ps 
docker ps -qa
docker rm `docker ps -qa`
docker ps -a
docker images 
docker rmi python
docker images
docker system prune --all
docker images 
docker volume ls
docker volume prune 

docker images 
docker pull nginx 
docker images
docker run --name web -d nginx 
docker ps 
docker exec -it web /bin/bash
# apt update 
# apt install vim nano default-jdk -y 
# exit
docker ps -a
docker images
docker commit web USERNAME/web-base:v1 
docker images


mkdir ~/custom-apache
cd ~/custom-apache/
wget https://raw.githubusercontent.com/Jaibw/docker-v1/master/custom-apache/Dockerfile
cat Dockerfile 
docker build -t webserver:v1 .
docker images 
docker run -d --name demo01 webserver:v1 
docker inspect demo01 | grep -i ipaddress 
curl 172.#.#.#
docker stop demo01 

mkdir ~/hello-java
cd ~/hello-java
wget https://raw.githubusercontent.com/Jaibw/docker-v1/master/hello-java/Dockerfile
wget https://raw.githubusercontent.com/Jaibw/docker-v1/master/hello-java/Hello.java
cat Dockerfile 
cat Hello.java 
docker build -t hello-java:v1 .
docker images
docker run hello-java:v1
docker run -it hello-java:v1 /bin/bash
# ls 
# java Hello
# exit 
cat Dockerfile 

mkdir ~/corporate-image
cd ~/corporate-image
wget https://raw.githubusercontent.com/Jaibw/docker-v1/master/corporate-image/Dockerfile
docker build -t base-ubuntu .
docker run -it base-ubuntu
# nano --version 
# cd /data
# echo 'demo' > file1.txt 
# exit 
docker volume ls 
docker history base-ubuntu

mkdir ~/mysql-db
cd ~/mysql-db
wget https://raw.githubusercontent.com/Jaibw/docker-v1/master/mysql-db/Dockerfile
vim Dockerfile
docker build -t mysql-db .
docker images
docker run -d --name mysql mysql-db 
docker ps 
docker exec -it mysql /bin/bash
# mysql -u root -p 
# Password:  --- type password 
# mysql > exit 
# exit 

